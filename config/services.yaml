# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    adtraction_download_urls:
        'Pyret': '%env(ANDRACTION_DOWNLOAD_URL_Pyret)%'
        'Reima': '%env(ANDRACTION_DOWNLOAD_URL_Reima)%'
        'Lekmer': '%env(ANDRACTION_DOWNLOAD_URL_Lekmer)%'
        'Babyland': '%env(ANDRACTION_DOWNLOAD_URL_Babyland)%'
        'BabyV': '%env(ANDRACTION_DOWNLOAD_URL_BabyV)%'
        'Elodi': '%env(ANDRACTION_DOWNLOAD_URL_Elodi)%'
        'Lindex': '%env(ANDRACTION_DOWNLOAD_URL_Lindex)%'
        'Stadium': '%env(ANDRACTION_DOWNLOAD_URL_Stadium)%'
        'Litenlekermer': '%env(ANDRACTION_DOWNLOAD_URL_Litenlekermer)%'
        'Cykloteket': '%env(ANDRACTION_DOWNLOAD_URL_Cykloteket)%'
        'Ahlens': '%env(ANDRACTION_DOWNLOAD_URL_Ahlens)%'

        'COS': '%env(ANDRACTION_DOWNLOAD_URL_COS)%'
        'Björn_Borg': '%env(ANDRACTION_DOWNLOAD_URL_Bjorn_Borg)%'
        'Lekia': '%env(ANDRACTION_DOWNLOAD_URL_Lekia)%'
        'Litenleker': '%env(ANDRACTION_DOWNLOAD_URL_Litenleker)%'
        'SneakersPoint': '%env(ANDRACTION_DOWNLOAD_URL_SneakersPoint)%'
        'Stor\&Liten': '%env(ANDRACTION_DOWNLOAD_URL_Stor_and_Liten)%'

    adtraction_download_file_path: '%env(ANDRACTION_DOWNLOAD_FILE_PATH)%'

    adrecord_download_urls:
      'Baby Björn': '%env(ADRECORD_DOWNLOAD_URL_Baby_Bjorn)%'
      'Cardoonia': '%env(ADRECORD_DOWNLOAD_URL_Cardoonia)%'
      'EbbeKids': '%env(ADRECORD_DOWNLOAD_URL_EbbeKids)%'
      'FrankDandy': '%env(ADRECORD_DOWNLOAD_URL_FrankDandy)%'
      'Gus Textil': '%env(ADRECORD_DOWNLOAD_URL_Gus_Textil)%'
      'Jultröja': '%env(ADRECORD_DOWNLOAD_URL_Jultroja)%'
      'LaplandEcostore': '%env(ADRECORD_DOWNLOAD_URL_LaplandEcostore)%'
      'Leksakscity': '%env(ADRECORD_DOWNLOAD_URL_Leksakscity)%'
      'Nalleriet.se': '%env(ADRECORD_DOWNLOAD_URL_Nalleriet_se)%'
      'Namnband': '%env(ADRECORD_DOWNLOAD_URL_Namnband)%'
      'Shirtstore': '%env(ADRECORD_DOWNLOAD_URL_Shirtstore)%'
      'Spelexperten': '%env(ADRECORD_DOWNLOAD_URL_Spelexperten)%'
      'Sportshopen': '%env(ADRECORD_DOWNLOAD_URL_Sportshopen)%'
      'StigaSports': '%env(ADRECORD_DOWNLOAD_URL_StigaSports)%'
      'Strumpgalen.se': '%env(ADRECORD_DOWNLOAD_URL_Strumpgalen_se)%'
      'Twar.se': '%env(ADRECORD_DOWNLOAD_URL_Twar_se)%'
    adrecord_download_file_path: '%env(ADRECORD_DOWNLOAD_FILE_PATH)%'

    support_email: '%env(SUPPORT_EMAIL)%'
    fos_rest.throw_exception_on_unsupported_content_type: true
    fos_rest.body_default_format: 'json'
    locale: 'en'
    redis_host: '%env(REDIS_HOST)%'
    redis_port: '%env(REDIS_PORT)%'
    redis_host_cache: '%env(REDIS_HOST_CACHE)%'
    redis_port_cache: '%env(REDIS_PORT_CACHE)%'
    redis_access: '%redis_host_cache%:%redis_port_cache%'
    csv_handle_step: '%env(CSV_HANDLE_STEP)%'
    force_analysis: '%env(FORCE_ANALYSIS)%'
#    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy
#    jms_serializer.serialized_name_annotation_strategy.class: JMS\Serializer\Naming\SerializedNameAnnotationStrategy
services:
    # default configuration for services in *this* file
    _defaults:
        bind:
          $commandBus: '@command.bus'
          $productsBus: '@products.bus'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Util\RedisHelper:
      arguments:
        - '%redis_host%'
        - '%redis_port%'
      lazy: true

    App\Cache\TagAwareQueryResultCacheCategory:
      arguments: ['@pdo_category_cache_pool']
      public: true
      lazy: true

    App\Cache\TagAwareQueryResultCacheBrand:
      arguments: ['@pdo_brand_cache_pool']
      public: true
      lazy: true

    App\Cache\TagAwareQueryResultCacheShop:
      arguments: ['@pdo_shop_cache_pool']
      public: true
      lazy: true

    App\Cache\TagAwareQueryResultCacheProduct:
      arguments: ['@pdo_product_cache_pool']
      public: true
      lazy: true

    App\Cache\TagAwareQueryResultCacheCommon:
      arguments: ['@pdo_common_cache_pool']
      public: true
      lazy: true

    App\Cache\CacheManager:
      arguments:
        $pdo_common_cache_pool: '@pdo_common_cache_pool'
        $pdo_shop_cache_pool: '@pdo_shop_cache_pool'
        $pdo_category_cache_pool: '@pdo_category_cache_pool'
        $pdo_product_cache_pool: '@pdo_product_cache_pool'
        $pdo_brand_cache_pool: '@pdo_brand_cache_pool'
        $doctrine_result_cache_pool: '@doctrine.result_cache_pool'
        $doctrine_system_cache_pool: '@doctrine.system_cache_pool'
      lazy: true

    jms_serializer.object_constructor:
      public: false
      alias: jms_serializer.doctrine_object_constructor

    App\Services\Models\ProductService:
      lazy: true

    App\Services\Models\BrandService:
      lazy: true

    App\Services\Models\CategoryService:
      lazy: true

    App\Services\Models\ShopService:
      lazy: true

    App\Services\Models\AdminShopRulesService:
      lazy: true

    App\Services\ObjectsHandler:
      lazy: true

    serializer.normalizer.flatten_exception:
      class: App\Symfony\Component\Serializer\Normalizer\FlattenExceptionNormalizer
      tags:
        - {name: serializer.normalizer, priority: -915}

    App\Services\HandleDownloadFileData:
      arguments:
        $adtractionDownloadUrls: '%adtraction_download_urls%'
        $adrecordDownloadUrls: '%adrecord_download_urls%'
        $csvHandleStep: '%csv_handle_step%'
        $productsBus: '@products.bus'
        $commandBus: '@command.bus'
      lazy: true

    App\Services\Queue\ProductDataRowHandler:
      arguments:
        $vacuumBus: '@vacuum.bus'
        $forceAnalysis: '%force_analysis%'
      lazy: true

    App\Command\ResourceDownloadFile:
      arguments:
        $filePath: ''
        $urls: {}

    App\Serializer\ConstraintViolationListHandler:
      public: false
      tags:
        - {name: jms_serializer.subscribing_handler}

    my_body_listener:
      class: App\EventListener\BodyListener
      tags:
        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 10 }
      arguments: ['@fos_rest.decoder_provider', '%fos_rest.throw_exception_on_unsupported_content_type%']
      calls:
        - [setDefaultFormat, ['%fos_rest.body_default_format%']]

    App\QueueModelHandlers\CarriageShopHandler:
      tags: [{ name: messenger.message_handler, bus: command.bus }]
      # prevent handlers from being registered twice (or you can remove
      # the MessageHandlerInterface that autoconfigure uses to find handlers)
      autoconfigure: false

    App\QueueModelHandlers\FileReadyDownloadedHandler:
      tags: [{ name: messenger.message_handler, bus: command.bus }]
      # prevent handlers from being registered twice (or you can remove
      # the MessageHandlerInterface that autoconfigure uses to find handlers)
      autoconfigure: false


    App\QueueModelHandlers\AdrecordDataRowHandler:
      tags: [{ name: messenger.message_handler, bus: products.bus }]
      # prevent handlers from being registered twice (or you can remove
      # the MessageHandlerInterface that autoconfigure uses to find handlers)
      autoconfigure: false

    App\QueueModelHandlers\AdtractionDataRowHandler:
      tags: [{ name: messenger.message_handler, bus: products.bus }]
      # prevent handlers from being registered twice (or you can remove
      # the MessageHandlerInterface that autoconfigure uses to find handlers)
      autoconfigure: false

    App\QueueModelHandlers\VacuumJobHandler:
      tags: [{ name: messenger.message_handler, bus: vacuum.bus }]
      # prevent handlers from being registered twice (or you can remove
      # the MessageHandlerInterface that autoconfigure uses to find handlers)
      autoconfigure: false